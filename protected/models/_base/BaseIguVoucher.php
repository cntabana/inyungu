<?php

/**
 * This is the model base class for the table "igu_voucher".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "IguVoucher".
 *
 * Columns in table "igu_voucher" available as properties of the model,
 * followed by relations of table "igu_voucher" available as properties of the model.
 *
 * @property integer $id
 * @property string $vouchernumber
 * @property integer $status
 * @property integer $idcredit
 *
 * @property IguCredit $idcredit0
 * @property IguVoucherManagement[] $iguVoucherManagements
 */
abstract class BaseIguVoucher extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'igu_voucher';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'IguVoucher|IguVouchers', $n);
	}

	public static function representingColumn() {
		return 'vouchernumber';
	}

	public function rules() {
		return array(
			array('vouchernumber, idcredit', 'required'),
			array('status, idcredit', 'numerical', 'integerOnly'=>true),
			array('vouchernumber', 'length', 'max'=>12),
			array('status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, vouchernumber, status, idcredit', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idcredit0' => array(self::BELONGS_TO, 'IguCredit', 'idcredit'),
			'iguVoucherManagements' => array(self::HAS_MANY, 'IguVoucherManagement', 'idvoucher'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}
 
 
	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'vouchernumber' => Yii::t('app', 'Vouchernumber'),
			'status' => Yii::t('app', 'Status'),
			'idcredit' => null,
			'number'=>null,
			'idcredit0' => null,
			'iguVoucherManagements' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('vouchernumber', $this->vouchernumber, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('idcredit', $this->idcredit);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}