<?php

/**
 * This is the model base class for the table "igu_payment".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "IguPayment".
 *
 * Columns in table "igu_payment" available as properties of the model,
 * followed by relations of table "igu_payment" available as properties of the model.
 *
 * @property integer $id
 * @property integer $idclient
 * @property string $datepaiement
 * @property string $vouchernumber
 *
 * @property IguRegistration $idclient0
 */
abstract class BaseIguPayment extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'igu_payment';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Kwishyura|Kwishyura', $n);
	}

	public static function representingColumn() {
		return 'datepaiement';
	}

	public function rules() {
		return array(
			array('idclient, datepaiement, vouchernumber', 'required'),
			array('idclient', 'numerical', 'integerOnly'=>true),
			array('vouchernumber', 'length', 'max'=>12),
			array('id, idclient, datepaiement, vouchernumber', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idclient0' => array(self::BELONGS_TO, 'IguRegistration', 'idclient'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idclient' => null,
			'datepaiement' => Yii::t('app', 'Igihe wishyuriye'),
			'vouchernumber' => Yii::t('app', 'Imibare yo kwishyura'),
			'idclient0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;
        if(Yii::app()->user->status == 1){
		$idclient = Yii::app()->db->createCommand('SELECT id FROM igu_registration where  iduser='.Yii::app()->session['iduser'])->queryScalar();
        $criteria->addCondition('idclient='.$idclient['id']);
		}
		$criteria->compare('id', $this->id);
		$criteria->compare('idclient', $this->idclient);
		$criteria->compare('datepaiement', $this->datepaiement, true);
		$criteria->compare('vouchernumber', $this->vouchernumber, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}