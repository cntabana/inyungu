<?php

/**
 * This is the model base class for the table "igu_registration".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "IguRegistration".
 *
 * Columns in table "igu_registration" available as properties of the model,
 * followed by relations of table "igu_registration" available as properties of the model.
 *
 * @property integer $id
 * @property string $firstname
 * @property string $lastname
 * @property string $telephone
 * @property string $datedinscription
 * @property string $email
 * @property integer $iddistrict
 * @property integer $idumurenge
 * @property string $akagali
 * @property string $umudugudu
 * @property string $identite
 * @property integer $idcompanytype
 * @property integer $numberofmembers
 * @property string $nameofcooperative
 * @property integer $iduser
 *
 * @property IguClientProduct[] $iguClientProducts
 * @property IguHistoriquePrice[] $iguHistoriquePrices
 * @property IguInvestment[] $iguInvestments
 * @property IguPayment[] $iguPayments
 * @property User $iduser0
 * @property IguCompanytype $idcompanytype0
 * @property Imirenge $idumurenge0
 */
abstract class BaseIguRegistration extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'igu_registration';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Umwirondoro|Umwirondoro', $n);
	}
    function getName(){
	   return $this->firstname.' '.$this->lastname;
	}
	public static function representingColumn() {
		return 'firstname';
	}

	public function rules() {
		return array(
			array('firstname, lastname, telephone, datedinscription, email, iddistrict, idumurenge, identite, idcompanytype, nameofcooperative, iduser', 'required','message'=>'<b>{attribute}</b> ntihagomba kubamo ubusa .'),
			array('iddistrict, idumurenge, idcompanytype, numberofmembers, iduser,identite', 'numerical', 'integerOnly'=>true,'message'=>'<b>{attribute}</b> igomba kuba imibare gusa'),
			array('firstname, lastname, telephone, akagali,umudugudu', 'length', 'max'=>20),
			array('email, nameofcooperative', 'length', 'max'=>50),
			array('identite', 'Irangamuntu'),
			array('identite', 'length','min'=>16,'max'=>16,'tooShort'=>'Imibare ntiyuzuye,igomba kuba ari 16'),
			array('email', 'email','message'=>'Iyo email ntibaho'),
			array('akagali,umudugudu, numberofmembers', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, firstname, lastname, telephone, datedinscription, email, iddistrict, idumurenge, akagali,umudugudu, identite, idcompanytype, numberofmembers, nameofcooperative, iduser', 'safe', 'on'=>'search'),
		);
	}
    
	public function relations() {
		return array(
			'iguClientProducts' => array(self::HAS_MANY, 'IguClientProduct', 'idclient'),
			'iguHistoriquePrices' => array(self::HAS_MANY, 'IguHistoriquePrice', 'idclient'),
			'iguInvestments' => array(self::HAS_MANY, 'IguInvestment', 'idclient'),
			'iguPayments' => array(self::HAS_MANY, 'IguPayment', 'idclient'),
			'iduser0' => array(self::BELONGS_TO, 'User', 'iduser'),
			'idcompanytype0' => array(self::BELONGS_TO, 'IguCompanytype', 'idcompanytype'),
			'idumurenge0' => array(self::BELONGS_TO, 'Imirenge', 'idumurenge'),
		);
	}
	
	public function Irangamuntu($attribute,$params='')
	 {
	     $identity = $this->identite;
		 $cond =  substr($identity,5,1);
		 if($cond != 7 && $cond != 8){
		   $this->addError($attribute,'iyi rangamuntu "<b>'.$identity.'</b>" Ntibaho' );  
		}		
	 }
	 
	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'firstname' => Yii::t('app', 'Izina ribanza'),
			'lastname' => Yii::t('app', 'Irindi zina'),
			'telephone' => Yii::t('app', 'Telephoni'),
			'datedinscription' => Yii::t('app', 'Datedinscription'),
			'email' => Yii::t('app', 'Email'),
			'iddistrict' => Yii::t('app', 'Iddistrict'),
			'idumurenge' => null,
			'akagali' => Yii::t('app', 'Akagali'),
			'umudugudu' => Yii::t('app', 'Umudugudu'),
			'identite' => Yii::t('app', 'Indangamuntu'),
			'idcompanytype' => null,
			'numberofmembers' => Yii::t('app', 'Umubare w abakozi'),
			'nameofcooperative' => Yii::t('app', 'izina ryaho ukora'),
			'name' => Yii::t('app', 'Amazina'),
			'iduser' => null,
			'iguClientProducts' => null,
			'iguHistoriquePrices' => null,
			'iguInvestments' => null,
			'iguPayments' => null,
			'iduser0' => null,
			'idcompanytype0' => null,
			'idumurenge0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('firstname', $this->firstname, true);
		$criteria->compare('lastname', $this->lastname, true);
		$criteria->compare('telephone', $this->telephone, true);
		$criteria->compare('datedinscription', $this->datedinscription, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('iddistrict', $this->iddistrict);
		$criteria->compare('idumurenge', $this->idumurenge);
		$criteria->compare('akagali', $this->akagali, true);
		$criteria->compare('umudugudu', $this->umudugudu, true);
		$criteria->compare('identite', $this->identite, true);
		$criteria->compare('idcompanytype', $this->idcompanytype);
		$criteria->compare('numberofmembers', $this->numberofmembers);
		$criteria->compare('nameofcooperative', $this->nameofcooperative, true);
		$criteria->compare('iduser', $this->iduser);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}