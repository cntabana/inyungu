<?php

/**
 * This is the model base class for the table "igu_agents".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "IguAgents".
 *
 * Columns in table "igu_agents" available as properties of the model,
 * followed by relations of table "igu_agents" available as properties of the model.
 *
 * @property integer $id
 * @property string $firstname
 * @property string $lastname
 * @property integer $telephone
 * @property integer $iddistrict
 * @property string $sector
 * @property integer $identite
 * @property integer $iduser
 *
 * @property User $iduser0
 * @property IguDistrict $iddistrict0
 * @property IguVoucherManagement[] $iguVoucherManagements
 */
abstract class BaseIguAgents extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'igu_agents';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'IguAgents|IguAgents', $n);
	}

	public static function representingColumn() {
		return 'firstname';
	}

	public function rules() {
		return array(
			array('firstname, lastname, telephone, iddistrict, identite, iduser', 'required'),
			array('telephone, iddistrict, identite, iduser', 'numerical', 'integerOnly'=>true),
			array('firstname, lastname, sector', 'length', 'max'=>20),
			array('sector', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, firstname, lastname, telephone, iddistrict, sector, identite, iduser', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'iduser0' => array(self::BELONGS_TO, 'User', 'iduser'),
			'iddistrict0' => array(self::BELONGS_TO, 'IguDistrict', 'iddistrict'),
			'iguVoucherManagements' => array(self::HAS_MANY, 'IguVoucherManagement', 'idagent'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'firstname' => Yii::t('app', 'Firstname'),
			'lastname' => Yii::t('app', 'Lastname'),
			'telephone' => Yii::t('app', 'Telephone'),
			'iddistrict' => null,
			'sector' => Yii::t('app', 'Sector'),
			'identite' => Yii::t('app', 'Identite'),
			'iduser' => null,
			'iduser0' => null,
			'iddistrict0' => null,
			'iguVoucherManagements' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('firstname', $this->firstname, true);
		$criteria->compare('lastname', $this->lastname, true);
		$criteria->compare('telephone', $this->telephone);
		$criteria->compare('iddistrict', $this->iddistrict);
		$criteria->compare('sector', $this->sector, true);
		$criteria->compare('identite', $this->identite);
		$criteria->compare('iduser', $this->iduser);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}