<?php

/**
 * This is the model base class for the table "igu_products".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "IguProducts".
 *
 * Columns in table "igu_products" available as properties of the model,
 * followed by relations of table "igu_products" available as properties of the model.
 *
 * @property integer $id
 * @property integer $idsouscategory
 * @property string $productname
 * @property string $image
 *
 * @property IguClientProduct[] $iguClientProducts
 * @property IguHistoriquePrice[] $iguHistoriquePrices
 * @property IguSousCategory $idsouscategory0
 */
abstract class BaseIguProducts extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'igu_products';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Igicuruzwa|IguProducts', $n);
	}

	public static function representingColumn() {
		return 'productname';
	}

	public function rules() {
		return array(
			array('idsouscategory, productname, image', 'required'),
			array('idsouscategory', 'numerical', 'integerOnly'=>true),
			array('productname', 'length', 'max'=>30),
			array('image', 'length', 'max'=>50),
			array('id, idsouscategory, productname, image', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'iguClientProducts' => array(self::HAS_MANY, 'IguClientProduct', 'idproduct'),
			'iguHistoriquePrices' => array(self::HAS_MANY, 'IguHistoriquePrice', 'idproduct'),
			'idsouscategory0' => array(self::BELONGS_TO, 'IguSousCategory', 'idsouscategory'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idsouscategory' => null,
			'productname' => Yii::t('app', 'Igicuruzwa'),
			'image' => Yii::t('app', 'Image'),
			'iguClientProducts' => null,
			'iguHistoriquePrices' => null,
			'idsouscategory0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idsouscategory', $this->idsouscategory);
		$criteria->compare('productname', $this->productname, true);
		$criteria->compare('image', $this->image, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}