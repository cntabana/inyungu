<?php

/**
 * This is the model base class for the table "igu_client_product".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "IguClientProduct".
 *
 * Columns in table "igu_client_product" available as properties of the model,
 * followed by relations of table "igu_client_product" available as properties of the model.
 *
 * @property integer $id
 * @property integer $idproduct
 * @property integer $idclient
 * @property integer $currentprice
 * @property string $creationdate
 * @property integer $quantity
 * @property integer $totalamount
 * @property string $detail
 *
 * @property IguRegistration $idclient0
 * @property IguProducts $idproduct0
 * @property IguImageProduct[] $iguImageProducts
 */
abstract class BaseIguClientProduct extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'igu_client_product';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Ibigurishwa|Ibigurishwa', $n);
	}

	public static function representingColumn() {
		return 'creationdate';
	}

	public function rules() {
		return array(
			array('idproduct, idclient, currentprice, creationdate, quantity, totalamount, detail', 'required'),
			array('idproduct, idclient, currentprice, quantity, totalamount', 'numerical', 'integerOnly'=>true),
			array('mesure', 'length', 'max'=>16),
			array('id, idproduct, idclient, currentprice, creationdate,mesure, quantity, totalamount, detail', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idclient0' => array(self::BELONGS_TO, 'IguRegistration', 'idclient'),
			'idproduct0' => array(self::BELONGS_TO, 'IguProducts', 'idproduct'),
			'iguImageProducts' => array(self::HAS_MANY, 'IguImageProduct', 'idclientproduct'),
			
		);
	}
    public function getIngano(){
	
	    return number_format($this->quantity,0,",",".").' '.$this->mesure;
	}
	 public function getIgiciro(){
	
	    return number_format($this->currentprice,0,",",".").' frw';
	}
	public function getIgiciroCyose(){
	
	 $price = number_format($this->totalamount,0,",",".");
	 return $price.' frw';
	}
	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idproduct' => null,
			'idclient' => null,
			'currentprice' => Yii::t('app', 'igiciro ku kg/L'),
			'creationdate' => Yii::t('app', 'Italiki'),
			'quantity' => Yii::t('app', 'Ingano'),
			'totalamount' => Yii::t('app', 'amafaranga yose'),
			'detail' => Yii::t('app', 'Muri make'),
			'mesure' => Yii::t('app', 'Mesure'),
			'igiciroCyose' => Yii::t('app', 'Igiciro cyose'),
			'idclient0' => null,
			'idproduct0' => null,
			'iguImageProducts' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;
        if(Yii::app()->user->status == 1){
		$idclient = Yii::app()->db->createCommand('SELECT id FROM igu_registration where  iduser='.Yii::app()->session['iduser'])->queryRow();
        $criteria->addCondition('idclient='.$idclient['id']);
		}
		$criteria->compare('id', $this->id);
		$criteria->compare('idproduct', $this->idproduct);
		$criteria->compare('idclient', $this->idclient);
		$criteria->compare('currentprice', $this->currentprice);
		$criteria->compare('creationdate', $this->creationdate, true);
		$criteria->compare('quantity', $this->quantity);
		$criteria->compare('mesure', $this->mesure);
		$criteria->compare('totalamount', $this->totalamount);
		$criteria->compare('detail', $this->detail, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
	public function searchArray(){
	
	    $data = array();
	    $row = Yii::app()->db->createCommand('SELECT id,productname FROM igu_products')->queryAll();
		foreach($row as $rows){
		 array_push($data,$rows['productname']);
			
		}
		
		return $data;
	}
	
	static function displayProductsHomegage(){
	
	$sql = "SELECT cp.id as id,pr.productname as productname, totalamount, quantity,telephone,image,province,district,pr.idsouscategory
					FROM igu_payment p, igu_voucher v, igu_credit c, igu_products pr, igu_client_product cp,igu_registration r,igu_district dis,igu_province pro
					WHERE c.id = v.idcredit
					AND v.vouchernumber = p.vouchernumber
					AND pr.id = cp.idproduct
					and r.id = cp.idclient
					and r.id = p.idclient
					and pro.id = dis.idprovince
					and dis.id = r.iddistrict
					and SUBSTRING(now(),1,10)  <= DATE_ADD( datepaiement, INTERVAL days DAY ) and validity = 0 order by cp.id desc limit 20";
					
	    $rawData = Yii::app()->db->createCommand($sql)->queryAll();
        		
		return $rawData;
	
	}
}